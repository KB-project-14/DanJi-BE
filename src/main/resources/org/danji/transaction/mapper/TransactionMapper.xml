<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.danji.transaction.mapper.TransactionMapper">
    <insert id="insert" parameterType="TransactionVO">
        INSERT INTO transaction ( transaction_id
                                , from_wallet_id
                                , to_wallet_id
                                , before_balance
                                , after_balance
                                , amount
                                , direction
                                , type
                                , comment
                                , owner_wallet_id
                                , created_at
                                , updated_at)
        VALUES (#{transactionId},
                #{fromWalletId},
                #{toWalletId},
                #{beforeBalance},
                #{afterBalance},
                #{amount},
                #{direction},
                #{type},
                #{comment},
                #{ownerWalletId},
                now(),
                now())
    </insert>

    <insert id="insertMany" parameterType="java.util.List">
        INSERT INTO `transaction` (
        transaction_id, from_wallet_id, to_wallet_id,
        before_balance, after_balance, amount,
        direction, `type`, `comment`, owner_wallet_id,
        created_at, updated_at
        )
        VALUES
        <foreach collection="list" item="t" separator=",">
            (#{t.transactionId},
            #{t.fromWalletId},
            #{t.toWalletId},
            #{t.beforeBalance},
            #{t.afterBalance},
            #{t.amount},
            #{t.direction},
            #{t.type},
            #{t.comment},
            #{t.ownerWalletId},
            NOW(), NOW())
        </foreach>
    </insert>

    <select id="findByFilter" resultType="TransactionVO">
        SELECT *
        FROM transaction
        WHERE owner_wallet_id = #{walletId}
        AND created_at BETWEEN #{startDate} AND DATE_ADD(#{lastDate}, INTERVAL 1 DAY)

        <if test="direction != null">
            AND direction = #{direction}
        </if>

        <choose>
            <when test="sortOrder != null">
                ORDER BY created_at ${sortOrder.name()}
            </when>
            <otherwise>
                ORDER BY created_at DESC
            </otherwise>
        </choose>
    </select>

    <select id = "findTotalChargeAmountByMonth" resultType="int">
        SELECT COALESCE(SUM(amount), 0)
        FROM transaction
        WHERE owner_wallet_id = #{localWalletId}
          AND type = 'CHARGE'
          AND direction = 'INCOME'
          AND MONTH(created_at) = #{month}
    </select>


</mapper>