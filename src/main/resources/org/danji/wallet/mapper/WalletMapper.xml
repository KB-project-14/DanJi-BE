<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.danji.wallet.mapper.WalletMapper">
    <insert id="create">
        insert into wallet
        values (#{walletId}, #{memberId}, #{localCurrencyId}, #{walletType}, #{balance}, #{displayOrder}, now(), now())
    </insert>

    <select id="getCashWalletByUserId" parameterType="java.util.UUID"
            resultType="WalletVO">
        SELECT wallet_id,
               member_id,
               local_currency_id,
               wallet_type,
               balance
        FROM wallet
        WHERE member_id = #{userId}
          AND wallet_type = 'CASH'
    </select>

    <select id="findById" parameterType="java.util.UUID"
            resultType="WalletVO">
        SELECT *
        FROM wallet
        WHERE wallet_id = #{walletId}

    </select>

    <select id="findByMemberIdAndLocalCurrencyId" parameterType="java.util.UUID" resultType="WalletVO">
        SELECT *
        FROM wallet
        WHERE member_id = #{memberId}
          AND local_currency_id = #{localCurrencyId}
    </select>

    <select id="findByFilter" resultType="WalletVO">
        SELECT *
        FROM wallet
        <where>
            <if test="memberId != null">
                AND member_id = #{memberId}
            </if>
            <if test="walletType != null">
                AND wallet_type = #{walletType}
            </if>
        </where>
    </select>

    <update id="updateWalletBalance" parameterType="java.util.UUID">
        UPDATE wallet
        SET balance    = balance + #{amount},
            updated_at = NOW()
        WHERE wallet_id = #{walletId}
    </update>

<<<<<<< HEAD
    <update id="bulkUpdateDisplayOrder">
        <foreach collection="list" item="wallet" separator=";">
            UPDATE wallet
            SET display_order = #{wallet.displayOrder}
            WHERE wallet_id = #{wallet.walletId}
        </foreach>
    </update>

    <update id="reorderDisplayOrder">
        UPDATE wallet w
            JOIN (
                SELECT wallet_id, ROW_NUMBER() OVER (ORDER BY display_order) AS new_order
                FROM wallet
                WHERE member_id = #{memberId}
            ) t ON w.wallet_id = t.wallet_id
        SET w.display_order = t.new_order
    </update>

    <delete id="delete">
        DELETE FROM wallet WHERE wallet_id = #{walletId}
    </delete>
=======
    <select id="findByMemberId" parameterType="java.util.UUID" resultType="WalletVO">
        SELECT *
        FROM wallet
        WHERE member_id = #{memberId}
          AND wallet_type = 'CASH'
    </select>

<<<<<<< HEAD

>>>>>>> 918ae14 (feat: 지역화폐 끼리 환전 로직 구현)
=======
    <select id = "findLocalWalletByMemberId" parameterType="java.util.UUID" resultType="WalletVO">
        SELECT *
        FROM wallet
        WHERE member_id = #{memberId}
          AND wallet_type = 'LOCAL'
    </select>

>>>>>>> a50ca23 (refactor: 충전 로직에 TransferDTO의 fromWalletId와 toWalletId가 사용자 소유의 지갑인지 검증하는 로직을 추가)
</mapper>