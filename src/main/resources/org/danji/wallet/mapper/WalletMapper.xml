<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.danji.wallet.mapper.WalletMapper">
    <insert id="create">
        INSERT INTO wallet
        (wallet_id, member_id, local_currency_id, wallet_type, balance,
         display_order, created_at, updated_at)
        VALUES
            (#{walletId}, #{memberId}, #{localCurrencyId}, #{walletType}, #{balance},
             #{displayOrder}, NOW(), NOW())
    </insert>

    <select id="getCashWalletByUserId" parameterType="java.util.UUID"
            resultType="WalletVO">
        SELECT wallet_id,
               member_id,
               local_currency_id,
               wallet_type,
               balance
        FROM wallet
        WHERE member_id = #{userId}
          AND wallet_type = 'CASH'
    </select>

    <select id="findById" parameterType="java.util.UUID"
            resultType="WalletVO">
        SELECT *
        FROM wallet
        WHERE wallet_id = #{walletId}

    </select>

    <select id="findByMemberIdAndLocalCurrencyId" parameterType="java.util.UUID" resultType="WalletVO">
        SELECT *
        FROM wallet
        WHERE member_id = #{memberId}
          AND local_currency_id = #{localCurrencyId}
    </select>

    <select id="findByFilter" resultType="WalletVO">
        SELECT *
        FROM wallet
        <where>
            <if test="memberId != null">
                AND member_id = #{memberId}
            </if>
            <if test="walletType != null">
                AND wallet_type = #{walletType}
            </if>
        </where>
    </select>

    <update id="updateWalletBalance" parameterType="java.util.UUID">
        UPDATE wallet
        SET balance    = balance + #{amount},
            updated_at = NOW()
        WHERE wallet_id = #{walletId}
    </update>


    <select id="findByMemberId" parameterType="java.util.UUID" resultType="WalletVO">
        SELECT *
        FROM wallet
        WHERE member_id = #{memberId}
          AND wallet_type = 'CASH'
    </select>


    <update id="bulkUpdateDisplayOrder">
        <foreach collection="list" item="wallet" separator=";">
            UPDATE wallet
            SET display_order = #{wallet.displayOrder}
            WHERE wallet_id = #{wallet.walletId}
        </foreach>
    </update>

    <update id="reorderDisplayOrder">
        UPDATE wallet w
            JOIN (SELECT wallet_id, ROW_NUMBER() OVER (ORDER BY display_order) AS new_order
                  FROM wallet
                  WHERE member_id = #{memberId}) t ON w.wallet_id = t.wallet_id
        SET w.display_order = t.new_order
    </update>

    <delete id="delete">
        DELETE
        FROM wallet
        WHERE wallet_id = #{walletId}
    </delete>

    <select id="findMaxDisplayOrderByMemberId" parameterType="java.util.UUID" resultType="int">
        SELECT COALESCE(MAX(display_order), 0)
        FROM wallet
        WHERE member_id = #{memberId}
    </select>

    <select id="selectWalletDetailByWalletId" resultMap="walletDetailMap">
        SELECT w.wallet_id,
               w.member_id,
               w.local_currency_id,
               w.wallet_type,
               w.balance,
               w.display_order,
               lc.name AS local_currency_name,
               lc.benefit_type,
               lc.maximum,
               lc.percentage,
               w.created_at,
               w.updated_at
        FROM wallet w
                 JOIN local_currency lc
                      ON w.local_currency_id = lc.local_currency_id
        WHERE w.wallet_id = #{walletId}
    </select>

    <select id="findWalletListByMemberId" resultType="org.danji.wallet.dto.WalletDetailDTO">
        SELECT
            w.wallet_id,
            w.member_id,
            w.wallet_type,
            w.balance,
            w.display_order,
            w.local_currency_id,
            lc.name,
            lc.benefit_type,
            lc.percentage,
            lc.maximum
--             lc.image_url AS backgroundImageUrl
        FROM wallet w
        JOIN local_currency lc
        ON w.local_currency_id = lc.local_currency_id
        WHERE w.member_id = #{memberId}
        ORDER BY w.display_order ASC
    </select>

    <update id = "updateWalletTotalPayment">
        UPDATE wallet
        SET total_payment = total_payment + #{totalAmount},
            updated_at = NOW()
        WHERE wallet_id = #{walletId}
    </update>

    <resultMap id="walletDetailMap" type="WalletDetailDTO">
        <id property="walletId" column="wallet_id"/>
        <result property="memberId" column="member_id"/>
        <result property="localCurrencyId" column="local_currency_id"/>
        <result property="walletType" column="wallet_type"/>
        <result property="balance" column="balance"/>
        <result property="displayOrder" column="display_order"/>

        <result property="localCurrencyName" column="local_currency_name"/>
        <result property="benefitType" column="benefit_type"/>
        <result property="maximum" column="maximum"/>
        <result property="percentage" column="percentage"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>
</mapper>